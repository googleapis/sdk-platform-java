/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/card/v1/card.proto

// Protobuf Java Version: 3.25.8
package com.google.apps.card.v1;

public interface BorderStyleOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.apps.card.v1.BorderStyle)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The border type.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle.BorderType type = 1;</code>
   *
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();

  /**
   *
   *
   * <pre>
   * The border type.
   * </pre>
   *
   * <code>.google.apps.card.v1.BorderStyle.BorderType type = 1;</code>
   *
   * @return The type.
   */
  com.google.apps.card.v1.BorderStyle.BorderType getType();

  /**
   *
   *
   * <pre>
   * The colors to use when the type is `BORDER_TYPE_STROKE`.
   *
   * To set the stroke color, specify a value for the `red`, `green`, and `blue`
   * fields.
   * The value must be a float number between 0 and 1 based on the RGB color
   * value, where `0` (0/255) represents the absence of color  and `1` (255/255)
   * represents the maximum intensity of the color.
   *
   * For example, the following sets the color to red at its maximum intensity:
   *
   * ```
   * "color": {
   *    "red": 1,
   *    "green": 0,
   *    "blue": 0,
   * }
   * ```
   *
   * The `alpha` field is unavailable for stroke color. If specified, this field
   * is ignored.
   * </pre>
   *
   * <code>.google.type.Color stroke_color = 2;</code>
   *
   * @return Whether the strokeColor field is set.
   */
  boolean hasStrokeColor();

  /**
   *
   *
   * <pre>
   * The colors to use when the type is `BORDER_TYPE_STROKE`.
   *
   * To set the stroke color, specify a value for the `red`, `green`, and `blue`
   * fields.
   * The value must be a float number between 0 and 1 based on the RGB color
   * value, where `0` (0/255) represents the absence of color  and `1` (255/255)
   * represents the maximum intensity of the color.
   *
   * For example, the following sets the color to red at its maximum intensity:
   *
   * ```
   * "color": {
   *    "red": 1,
   *    "green": 0,
   *    "blue": 0,
   * }
   * ```
   *
   * The `alpha` field is unavailable for stroke color. If specified, this field
   * is ignored.
   * </pre>
   *
   * <code>.google.type.Color stroke_color = 2;</code>
   *
   * @return The strokeColor.
   */
  com.google.type.Color getStrokeColor();

  /**
   *
   *
   * <pre>
   * The colors to use when the type is `BORDER_TYPE_STROKE`.
   *
   * To set the stroke color, specify a value for the `red`, `green`, and `blue`
   * fields.
   * The value must be a float number between 0 and 1 based on the RGB color
   * value, where `0` (0/255) represents the absence of color  and `1` (255/255)
   * represents the maximum intensity of the color.
   *
   * For example, the following sets the color to red at its maximum intensity:
   *
   * ```
   * "color": {
   *    "red": 1,
   *    "green": 0,
   *    "blue": 0,
   * }
   * ```
   *
   * The `alpha` field is unavailable for stroke color. If specified, this field
   * is ignored.
   * </pre>
   *
   * <code>.google.type.Color stroke_color = 2;</code>
   */
  com.google.type.ColorOrBuilder getStrokeColorOrBuilder();

  /**
   *
   *
   * <pre>
   * The corner radius for the border.
   * </pre>
   *
   * <code>int32 corner_radius = 3;</code>
   *
   * @return The cornerRadius.
   */
  int getCornerRadius();
}
