on:
  push:
    branches:
    - main
  pull_request:
    paths:
    - library_generation/**

  workflow_dispatch:
name: verify_library_generation
jobs:
  integration_tests:
    strategy:
      matrix:
        java: [ 8 ]
        os: [ ubuntu-22.04, macos-12 ]
        post_processing: [ 'true', 'false' ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: temurin
        cache: maven
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: install docker (ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        set -x
        # install docker
        sudo apt install containerd -y
        sudo apt install -y docker.io docker-compose

        # launch docker
        sudo systemctl start docker
    - name: install docker (macos)
      if: matrix.os == 'macos-12'
      run: |
        brew update --preinstall
        brew install docker docker-compose qemu 
        brew upgrade qemu
        colima start
        docker run --user $(id -u):$(id -g) --rm hello-world
    - name: Run integration tests
      run: |
        set -x
        git config --global user.email "github-workflow@github.com"
        git config --global user.name "Github Workflow"
        library_generation/test/generate_library_integration_test.sh \
        --googleapis_gen_url https://cloud-java-bot:${{ secrets.CLOUD_JAVA_BOT_GITHUB_TOKEN }}@github.com/googleapis/googleapis-gen.git \
        --enable_postprocessing "${{ matrix.post_processing }}"
  unit_tests:
    strategy:
      matrix:
        java: [ 8 ]
        os: [ ubuntu-22.04, macos-12 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Run unit tests
      run: |
        set -x
        library_generation/test/generate_library_unit_tests.sh
  lint:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        scandir: 'library_generation'
        format: tty
        severity: error
