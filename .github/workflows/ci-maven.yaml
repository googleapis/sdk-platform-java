on:
  push:
    branches:
      - main
  pull_request:

name: ci-maven

env:
  SHOWCASE_VERSION: 0.25.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
      - run: java -version

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Unit Tests
        run: |
          mvn package --batch-mode --no-transfer-progress

      - name: Java Linter
        run: mvn fmt:check

  showcase:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 11 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
      - run: java -version

      - name: Bazel File Cache Setup
        id: cache-bazel
        uses: actions/cache@v3
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}
      - name: Bazel Cache Not Found
        if: steps.cache-bazel.outputs.cache-hit != 'true'
        run: |
          echo "No cache found."
      - name: Bazel Cache Found
        if: steps.cache-bazel.outputs.cache-hit == 'true'
        run: |
          echo -n "Cache found. Cache size: "
          du -sh ~/.cache/bazel
          echo "If the cache seems broken, update the CACHE_VERSION secret in"
          echo "https://github.com/googleapis/googleapis-discovery/settings/secrets/actions"
          echo "(use any random string, any GUID will work)"
          echo "and it will start over with a clean cache."
          echo "The old one will disappear after 7 days."

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
      - name: Install showcase server
        run: |
          sudo mkdir -p /usr/src/showcase
          sudo chown -R ${USER} /usr/src/
          curl --location https://github.com/googleapis/gapic-showcase/releases/download/v${SHOWCASE_VERSION}/gapic-showcase-${SHOWCASE_VERSION}-linux-amd64.tar.gz --output /usr/src/showcase/showcase-${SHOWCASE_VERSION}-linux-amd64.tar.gz
          cd /usr/src/showcase/
          tar -xf showcase-*
          ./gapic-showcase run &
          cd -

      - name: Showcase integration tests
        run: mvn verify -P showcase
