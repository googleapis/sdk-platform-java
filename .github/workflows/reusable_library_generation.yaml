# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# GitHub action job to test core java library features on
# downstream client libraries before they are released.
name: Hermetic library generation upon generation config change through pull requests
on:
  workflow_call:
    inputs:
      repo_full_name:
        required: true
        type: string
      github_repository:
        required: true
        type: string
      base_ref:
        required: true
        type: string
      head_ref:
        required: true
        type: string
    secrets:
      token:
        required: true
env:
  REPO_FULL_NAME: ${{ inputs.repo_full_name }}
  GITHUB_REPOSITORY: ${{ inputs.github_repository }}
jobs:
  library_generation_impl:
    runs-on: ubuntu-latest
    steps:
    - name: Prerequisite
      shell: bash
      run: |
        if [[ "${GITHUB_REPOSITORY}" != "${REPO_FULL_NAME}" ]]; then
          echo "This PR comes from a fork. Skip library generation."
          exit 0
        fi
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.token }}
    - uses: ./library_generation
    - name: Generate changed libraries
      shell: bash
      run: |
        set -x
        [ -z "$(git config user.email)" ] && git config --global user.email "cloud-java-bot@google.com"
        [ -z "$(git config user.name)" ] && git config --global user.name "cloud-java-bot"
        bash hermetic_library_generation.sh \
          --target_branch "${BASE_REF}" \
          --current_branch "${HEAD_REF}"
      env:
        BASE_REF: ${{ inputs.base_ref }}
        HEAD_REF: ${{ inputs.head_ref }}
        GH_TOKEN: ${{ secrets.token }}