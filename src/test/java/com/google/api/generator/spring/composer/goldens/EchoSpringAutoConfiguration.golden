package com.google.showcase.v1beta1.spring;

import com.google.api.gax.core.CredentialsProvider;
import com.google.api.gax.core.ExecutorProvider;
import com.google.api.gax.httpjson.InstantiatingHttpJsonChannelProvider;
import com.google.api.gax.retrying.RetrySettings;
import com.google.api.gax.rpc.TransportChannelProvider;
import com.google.cloud.spring.core.DefaultCredentialsProvider;
import com.google.showcase.v1beta1.EchoClient;
import com.google.showcase.v1beta1.EchoSettings;
import java.io.IOException;
import javax.annotation.Generated;
import org.springframework.boot.autoconfigure.AutoConfiguration;
import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.threeten.bp.Duration;

@Generated("by gapic-generator-java")
@AutoConfiguration
@ConditionalOnClass(EchoClient.class)
@ConditionalOnProperty(
    value = "com.google.showcase.v1beta1.spring.auto.echo.enabled",
    matchIfMissing = false)
@EnableConfigurationProperties(EchoSpringProperties.class)
public class EchoSpringAutoConfiguration {
  private final EchoSpringProperties clientProperties;

  protected EchoSpringAutoConfiguration(EchoSpringProperties clientProperties) {
    this.clientProperties = clientProperties;
  }

  @Bean
  @ConditionalOnMissingBean
  public CredentialsProvider echoCredentials() throws IOException {
    return ((CredentialsProvider) new DefaultCredentialsProvider(this.clientProperties));
  }

  @Bean
  @ConditionalOnMissingBean
  public TransportChannelProvider defaultEchoTransportChannelProvider() {
    return EchoSettings.defaultTransportChannelProvider();
  }

  @Bean
  @ConditionalOnMissingBean
  public EchoClient echoClient(
      @Qualifier("echoCredentials") CredentialsProvider credentialsProvider,
      @Qualifier("defaultEchoTransportChannelProvider")
          TransportChannelProvider defaultTransportChannelProvider)
      throws IOException {
    EchoSettings.Builder clientSettingsBuilder =
        EchoSettings.newBuilder()
            .setCredentialsProvider(credentialsProvider)
            .setTransportChannelProvider(defaultTransportChannelProvider)
            .setHeaderProvider();
    if (this.clientProperties.getQuotaProjectId() != null) {
      clientSettingsBuilder.setQuotaProjectId(this.clientProperties.getQuotaProjectId());
    }
    if (this.clientProperties.getExecutorThreadCount() != null) {
      ExecutorProvider executorProvider =
          EchoSettings.defaultExecutorProviderBuilder()
              .setExecutorThreadCount(this.clientProperties.getExecutorThreadCount())
              .build();
      clientSettingsBuilder.setBackgroundExecutorProvider(executorProvider);
    }
    if (this.clientProperties.getUseRest()) {
      clientSettingsBuilder.setTransportChannelProvider(
          EchoSettings.defaultHttpJsonTransportProviderBuilder().build());
    }
    RetrySettings.Builder echoRetrySettingBuilder =
        clientSettingsBuilder.echoSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getEchoInitialRetryDelay() != null) {
      echoRetrySettingBuilder.setInitialRetryDelay(
          this.clientProperties.getEchoInitialRetryDelay());
    }
    if (this.clientProperties.getEchoRetryDelayMultiplier() != null) {
      echoRetrySettingBuilder.setRetryDelayMultiplier(
          this.clientProperties.getEchoRetryDelayMultiplier());
    }
    if (this.clientProperties.getEchoMaxRetryDelay() != null) {
      echoRetrySettingBuilder.setMaxRetryDelay(this.clientProperties.getEchoMaxRetryDelay());
    }
    if (this.clientProperties.getEchoInitialRpcTimeout() != null) {
      echoRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getEchoInitialRpcTimeout());
    }
    if (this.clientProperties.getEchoRpcTimeoutMultiplier() != null) {
      echoRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getEchoRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getEchoMaxRpcTimeout() != null) {
      echoRetrySettingBuilder.setMaxRpcTimeout(this.clientProperties.getEchoMaxRpcTimeout());
    }
    if (this.clientProperties.getEchoTotalTimeout() != null) {
      echoRetrySettingBuilder.setTotalTimeout(this.clientProperties.getEchoTotalTimeout());
    }
    clientSettingsBuilder.echoSettings().setRetrySettings(echoRetrySettingBuilder.build());
    RetrySettings.Builder expandRetrySettingBuilder =
        clientSettingsBuilder.expandSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getExpandInitialRetryDelay() != null) {
      expandRetrySettingBuilder.setInitialRetryDelay(
          this.clientProperties.getExpandInitialRetryDelay());
    }
    if (this.clientProperties.getExpandRetryDelayMultiplier() != null) {
      expandRetrySettingBuilder.setRetryDelayMultiplier(
          this.clientProperties.getExpandRetryDelayMultiplier());
    }
    if (this.clientProperties.getExpandMaxRetryDelay() != null) {
      expandRetrySettingBuilder.setMaxRetryDelay(this.clientProperties.getExpandMaxRetryDelay());
    }
    if (this.clientProperties.getExpandInitialRpcTimeout() != null) {
      expandRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getExpandInitialRpcTimeout());
    }
    if (this.clientProperties.getExpandRpcTimeoutMultiplier() != null) {
      expandRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getExpandRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getExpandMaxRpcTimeout() != null) {
      expandRetrySettingBuilder.setMaxRpcTimeout(this.clientProperties.getExpandMaxRpcTimeout());
    }
    if (this.clientProperties.getExpandTotalTimeout() != null) {
      expandRetrySettingBuilder.setTotalTimeout(this.clientProperties.getExpandTotalTimeout());
    }
    clientSettingsBuilder.expandSettings().setRetrySettings(expandRetrySettingBuilder.build());
    RetrySettings.Builder collectRetrySettingBuilder =
        clientSettingsBuilder.collectSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getCollectInitialRpcTimeout() != null) {
      collectRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getCollectInitialRpcTimeout());
    }
    if (this.clientProperties.getCollectRpcTimeoutMultiplier() != null) {
      collectRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getCollectRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getCollectMaxRpcTimeout() != null) {
      collectRetrySettingBuilder.setMaxRpcTimeout(this.clientProperties.getCollectMaxRpcTimeout());
    }
    if (this.clientProperties.getCollectTotalTimeout() != null) {
      collectRetrySettingBuilder.setTotalTimeout(this.clientProperties.getCollectTotalTimeout());
    }
    clientSettingsBuilder.collectSettings().setRetrySettings(collectRetrySettingBuilder.build());
    RetrySettings.Builder chatRetrySettingBuilder =
        clientSettingsBuilder.chatSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getChatInitialRpcTimeout() != null) {
      chatRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getChatInitialRpcTimeout());
    }
    if (this.clientProperties.getChatRpcTimeoutMultiplier() != null) {
      chatRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getChatRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getChatMaxRpcTimeout() != null) {
      chatRetrySettingBuilder.setMaxRpcTimeout(this.clientProperties.getChatMaxRpcTimeout());
    }
    if (this.clientProperties.getChatTotalTimeout() != null) {
      chatRetrySettingBuilder.setTotalTimeout(this.clientProperties.getChatTotalTimeout());
    }
    clientSettingsBuilder.chatSettings().setRetrySettings(chatRetrySettingBuilder.build());
    RetrySettings.Builder chatAgainRetrySettingBuilder =
        clientSettingsBuilder.chatAgainSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getChatAgainInitialRpcTimeout() != null) {
      chatAgainRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getChatAgainInitialRpcTimeout());
    }
    if (this.clientProperties.getChatAgainRpcTimeoutMultiplier() != null) {
      chatAgainRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getChatAgainRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getChatAgainMaxRpcTimeout() != null) {
      chatAgainRetrySettingBuilder.setMaxRpcTimeout(
          this.clientProperties.getChatAgainMaxRpcTimeout());
    }
    if (this.clientProperties.getChatAgainTotalTimeout() != null) {
      chatAgainRetrySettingBuilder.setTotalTimeout(
          this.clientProperties.getChatAgainTotalTimeout());
    }
    clientSettingsBuilder
        .chatAgainSettings()
        .setRetrySettings(chatAgainRetrySettingBuilder.build());
    RetrySettings.Builder pagedExpandRetrySettingBuilder =
        clientSettingsBuilder.pagedExpandSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getPagedExpandInitialRetryDelay() != null) {
      pagedExpandRetrySettingBuilder.setInitialRetryDelay(
          this.clientProperties.getPagedExpandInitialRetryDelay());
    }
    if (this.clientProperties.getPagedExpandRetryDelayMultiplier() != null) {
      pagedExpandRetrySettingBuilder.setRetryDelayMultiplier(
          this.clientProperties.getPagedExpandRetryDelayMultiplier());
    }
    if (this.clientProperties.getPagedExpandMaxRetryDelay() != null) {
      pagedExpandRetrySettingBuilder.setMaxRetryDelay(
          this.clientProperties.getPagedExpandMaxRetryDelay());
    }
    if (this.clientProperties.getPagedExpandInitialRpcTimeout() != null) {
      pagedExpandRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getPagedExpandInitialRpcTimeout());
    }
    if (this.clientProperties.getPagedExpandRpcTimeoutMultiplier() != null) {
      pagedExpandRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getPagedExpandRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getPagedExpandMaxRpcTimeout() != null) {
      pagedExpandRetrySettingBuilder.setMaxRpcTimeout(
          this.clientProperties.getPagedExpandMaxRpcTimeout());
    }
    if (this.clientProperties.getPagedExpandTotalTimeout() != null) {
      pagedExpandRetrySettingBuilder.setTotalTimeout(
          this.clientProperties.getPagedExpandTotalTimeout());
    }
    clientSettingsBuilder
        .pagedExpandSettings()
        .setRetrySettings(pagedExpandRetrySettingBuilder.build());
    RetrySettings.Builder simplePagedExpandRetrySettingBuilder =
        clientSettingsBuilder.simplePagedExpandSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getSimplePagedExpandInitialRpcTimeout() != null) {
      simplePagedExpandRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getSimplePagedExpandInitialRpcTimeout());
    }
    if (this.clientProperties.getSimplePagedExpandRpcTimeoutMultiplier() != null) {
      simplePagedExpandRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getSimplePagedExpandRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getSimplePagedExpandMaxRpcTimeout() != null) {
      simplePagedExpandRetrySettingBuilder.setMaxRpcTimeout(
          this.clientProperties.getSimplePagedExpandMaxRpcTimeout());
    }
    if (this.clientProperties.getSimplePagedExpandTotalTimeout() != null) {
      simplePagedExpandRetrySettingBuilder.setTotalTimeout(
          this.clientProperties.getSimplePagedExpandTotalTimeout());
    }
    clientSettingsBuilder
        .simplePagedExpandSettings()
        .setRetrySettings(simplePagedExpandRetrySettingBuilder.build());
    RetrySettings.Builder waitRetrySettingBuilder =
        clientSettingsBuilder.waitSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getWaitInitialRpcTimeout() != null) {
      waitRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getWaitInitialRpcTimeout());
    }
    if (this.clientProperties.getWaitRpcTimeoutMultiplier() != null) {
      waitRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getWaitRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getWaitMaxRpcTimeout() != null) {
      waitRetrySettingBuilder.setMaxRpcTimeout(this.clientProperties.getWaitMaxRpcTimeout());
    }
    if (this.clientProperties.getWaitTotalTimeout() != null) {
      waitRetrySettingBuilder.setTotalTimeout(this.clientProperties.getWaitTotalTimeout());
    }
    clientSettingsBuilder.waitSettings().setRetrySettings(waitRetrySettingBuilder.build());
    RetrySettings.Builder blockRetrySettingBuilder =
        clientSettingsBuilder.blockSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getBlockInitialRpcTimeout() != null) {
      blockRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getBlockInitialRpcTimeout());
    }
    if (this.clientProperties.getBlockRpcTimeoutMultiplier() != null) {
      blockRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getBlockRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getBlockMaxRpcTimeout() != null) {
      blockRetrySettingBuilder.setMaxRpcTimeout(this.clientProperties.getBlockMaxRpcTimeout());
    }
    if (this.clientProperties.getBlockTotalTimeout() != null) {
      blockRetrySettingBuilder.setTotalTimeout(this.clientProperties.getBlockTotalTimeout());
    }
    clientSettingsBuilder.blockSettings().setRetrySettings(blockRetrySettingBuilder.build());
    RetrySettings.Builder collideNameRetrySettingBuilder =
        clientSettingsBuilder.collideNameSettings().getRetrySettings().toBuilder();
    if (this.clientProperties.getCollideNameInitialRpcTimeout() != null) {
      collideNameRetrySettingBuilder.setInitialRpcTimeout(
          this.clientProperties.getCollideNameInitialRpcTimeout());
    }
    if (this.clientProperties.getCollideNameRpcTimeoutMultiplier() != null) {
      collideNameRetrySettingBuilder.setRpcTimeoutMultiplier(
          this.clientProperties.getCollideNameRpcTimeoutMultiplier());
    }
    if (this.clientProperties.getCollideNameMaxRpcTimeout() != null) {
      collideNameRetrySettingBuilder.setMaxRpcTimeout(
          this.clientProperties.getCollideNameMaxRpcTimeout());
    }
    if (this.clientProperties.getCollideNameTotalTimeout() != null) {
      collideNameRetrySettingBuilder.setTotalTimeout(
          this.clientProperties.getCollideNameTotalTimeout());
    }
    clientSettingsBuilder
        .collideNameSettings()
        .setRetrySettings(collideNameRetrySettingBuilder.build());
    return EchoClient.create(clientSettingsBuilder.build());
  }
}
