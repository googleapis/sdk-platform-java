package com.google.showcase.v1beta1.spring;

import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Echo client bean */
@ConfigurationProperties("com.google.showcase.v1beta1.spring.auto.echo")
public class EchoSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Retry retrySettings;
  private Retry echoRetrySettings;
  private Retry expandRetrySettings;
  private Retry collectRetrySettings;
  private Retry chatRetrySettings;
  private Retry chatAgainRetrySettings;
  private Retry pagedExpandRetrySettings;
  private Retry simplePagedExpandRetrySettings;
  private Retry waitRetrySettings;
  private Retry blockRetrySettings;
  private Retry collideNameRetrySettings;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetrySettings() {
    return this.retrySettings;
  }

  public void setRetrySettings(Retry retrySettings) {
    this.retrySettings = retrySettings;
  }
}
