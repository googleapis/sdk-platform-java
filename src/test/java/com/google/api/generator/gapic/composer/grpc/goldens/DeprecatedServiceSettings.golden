package com.google.testdata.v1;

import com.google.api.core.ApiFunction;
import com.google.api.core.BetaApi;
import com.google.api.gax.core.GoogleCredentialsProvider;
import com.google.api.gax.core.InstantiatingExecutorProvider;
import com.google.api.gax.grpc.InstantiatingGrpcChannelProvider;
import com.google.api.gax.rpc.ApiClientHeaderProvider;
import com.google.api.gax.rpc.ClientContext;
import com.google.api.gax.rpc.ClientSettings;
import com.google.api.gax.rpc.StubSettings;
import com.google.api.gax.rpc.TransportChannelProvider;
import com.google.api.gax.rpc.UnaryCallSettings;
import com.google.protobuf.Empty;
import com.google.testdata.v1.stub.DeprecatedServiceStubSettings;
import java.io.IOException;
import java.util.List;
import javax.annotation.Generated;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/**
 * Settings class to configure an instance of {@link DeprecatedServiceClient}.
 *
 * <p>The default instance has everything set to sensible defaults:
 *
 * <ul>
 *   <li>The default service address (localhost) and default port (7469) are used.
 *   <li>Credentials are acquired automatically through Application Default Credentials.
 *   <li>Retries are configured for idempotent methods but not for non-idempotent methods.
 * </ul>
 *
 * <p>The builder of this class is recursive, so contained classes are themselves builders. When
 * build() is called, the tree of builders is called to create the complete settings object.
 *
 * <p>For example, to set the total timeout of fastFibonacci to 30 seconds:
 *
 * <pre>{@code
 * DeprecatedServiceSettings.Builder deprecatedServiceSettingsBuilder =
 *     DeprecatedServiceSettings.newBuilder();
 * deprecatedServiceSettingsBuilder
 *     .fastFibonacciSettings()
 *     .setRetrySettings(
 *         deprecatedServiceSettingsBuilder
 *             .fastFibonacciSettings()
 *             .getRetrySettings()
 *             .toBuilder()
 *             .setTotalTimeout(Duration.ofSeconds(30))
 *             .build());
 * DeprecatedServiceSettings deprecatedServiceSettings = deprecatedServiceSettingsBuilder.build();
 * }</pre>
 *
 * @deprecated This class is deprecated and will be removed in the next major version update.
 */
@Deprecated
@Generated("by gapic-generator-java")
public class DeprecatedServiceSettings extends ClientSettings<DeprecatedServiceSettings> {

  /** Returns the object with the settings used for calls to fastFibonacci. */
  public UnaryCallSettings<FibonacciRequest, Empty> fastFibonacciSettings() {
    return ((DeprecatedServiceStubSettings) getStubSettings()).fastFibonacciSettings();
  }

  /**
   * Returns the object with the settings used for calls to slowFibonacci.
   *
   * @deprecated This method is deprecated and will be removed in the next major version update.
   */
  @Deprecated
  public UnaryCallSettings<FibonacciRequest, Empty> slowFibonacciSettings() {
    return ((DeprecatedServiceStubSettings) getStubSettings()).slowFibonacciSettings();
  }

  public static final DeprecatedServiceSettings create(DeprecatedServiceStubSettings stub)
      throws IOException {
    return new DeprecatedServiceSettings.Builder(stub.toBuilder()).build();
  }

  /** Returns a builder for the default ExecutorProvider for this service. */
  public static InstantiatingExecutorProvider.Builder defaultExecutorProviderBuilder() {
    return DeprecatedServiceStubSettings.defaultExecutorProviderBuilder();
  }

  /** Returns the default service endpoint. */
  public static String getDefaultEndpoint() {
    return DeprecatedServiceStubSettings.getDefaultEndpoint();
  }

  /** Returns the default service scopes. */
  public static List<String> getDefaultServiceScopes() {
    return DeprecatedServiceStubSettings.getDefaultServiceScopes();
  }

  /** Returns a builder for the default credentials for this service. */
  public static GoogleCredentialsProvider.Builder defaultCredentialsProviderBuilder() {
    return DeprecatedServiceStubSettings.defaultCredentialsProviderBuilder();
  }

  /** Returns a builder for the default ChannelProvider for this service. */
  public static InstantiatingGrpcChannelProvider.Builder defaultGrpcTransportProviderBuilder() {
    return DeprecatedServiceStubSettings.defaultGrpcTransportProviderBuilder();
  }

  public static TransportChannelProvider defaultTransportChannelProvider() {
    return DeprecatedServiceStubSettings.defaultTransportChannelProvider();
  }

  @BetaApi("The surface for customizing headers is not stable yet and may change in the future.")
  public static ApiClientHeaderProvider.Builder defaultApiClientHeaderProviderBuilder() {
    return DeprecatedServiceStubSettings.defaultApiClientHeaderProviderBuilder();
  }

  /** Returns a new builder for this class. */
  public static Builder newBuilder() {
    return Builder.createDefault();
  }

  /** Returns a new builder for this class. */
  public static Builder newBuilder(ClientContext clientContext) {
    return new Builder(clientContext);
  }

  /** Returns a builder containing all the values of this settings class. */
  public Builder toBuilder() {
    return new Builder(this);
  }

  protected DeprecatedServiceSettings(Builder settingsBuilder) throws IOException {
    super(settingsBuilder);
  }

  /** Builder for DeprecatedServiceSettings. */
  public static class Builder extends ClientSettings.Builder<DeprecatedServiceSettings, Builder> {

    protected Builder() throws IOException {
      this(((ClientContext) null));
    }

    protected Builder(ClientContext clientContext) {
      super(DeprecatedServiceStubSettings.newBuilder(clientContext));
    }

    protected Builder(DeprecatedServiceSettings settings) {
      super(settings.getStubSettings().toBuilder());
    }

    protected Builder(DeprecatedServiceStubSettings.Builder stubSettings) {
      super(stubSettings);
    }

    private static Builder createDefault() {
      return new Builder(DeprecatedServiceStubSettings.newBuilder());
    }

    public DeprecatedServiceStubSettings.Builder getStubSettingsBuilder() {
      return ((DeprecatedServiceStubSettings.Builder) getStubSettings());
    }

    /**
     * Applies the given settings updater function to all of the unary API methods in this service.
     *
     * <p>Note: This method does not support applying settings to streaming methods.
     */
    public Builder applyToAllUnaryMethods(
        ApiFunction<UnaryCallSettings.Builder<?, ?>, Void> settingsUpdater) {
      super.applyToAllUnaryMethods(
          getStubSettingsBuilder().unaryMethodSettingsBuilders(), settingsUpdater);
      return this;
    }

    /** Returns the builder for the settings used for calls to fastFibonacci. */
    public UnaryCallSettings.Builder<FibonacciRequest, Empty> fastFibonacciSettings() {
      return getStubSettingsBuilder().fastFibonacciSettings();
    }

    /**
     * Returns the builder for the settings used for calls to slowFibonacci.
     *
     * @deprecated This method is deprecated and will be removed in the next major version update.
     */
    @Deprecated
    public UnaryCallSettings.Builder<FibonacciRequest, Empty> slowFibonacciSettings() {
      return getStubSettingsBuilder().slowFibonacciSettings();
    }

    @Override
    public DeprecatedServiceSettings build() throws IOException {
      return new DeprecatedServiceSettings(this);
    }
  }
}
