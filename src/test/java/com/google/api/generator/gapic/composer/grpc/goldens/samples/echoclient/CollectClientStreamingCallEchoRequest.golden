package com.google.showcase.v1beta1.samples;

import com.google.api.gax.rpc.ApiStreamObserver;
import com.google.showcase.v1beta1.EchoClient;
import com.google.showcase.v1beta1.EchoRequest;
import com.google.showcase.v1beta1.EchoResponse;
import com.google.showcase.v1beta1.Foobar;
import com.google.showcase.v1beta1.FoobarName;
import com.google.showcase.v1beta1.Severity;

public class CollectClientStreamingCallEchoRequest {

  public static void main(String[] args) throws Exception {
    collectClientStreamingCallEchoRequest();
  }

  public static void collectClientStreamingCallEchoRequest() throws Exception {
    try (EchoClient echoClient = EchoClient.create()) {
      ApiStreamObserver<EchoRequest> responseObserver =
          new ApiStreamObserver<EchoRequest>() {
            @Override
            public void onNext(EchoResponse response) {
              // Do something when a response is received.
            }

            @Override
            public void onError(Throwable t) {
              // Add error-handling
            }

            @Override
            public void onCompleted() {
              // Do something when complete.
            }
          };
      ApiStreamObserver<EchoRequest> requestObserver =
          echoClient.collect().clientStreamingCall(responseObserver);
      EchoRequest request =
          EchoRequest.newBuilder()
              .setName(FoobarName.ofProjectFoobarName("[PROJECT]", "[FOOBAR]").toString())
              .setParent(FoobarName.ofProjectFoobarName("[PROJECT]", "[FOOBAR]").toString())
              .setSeverity(Severity.forNumber(0))
              .setFoobar(Foobar.newBuilder().build())
              .build();
      requestObserver.onNext(request);
    }
  }
}