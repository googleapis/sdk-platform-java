/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema/google/showcase/v1beta1/rest_error.proto

// Protobuf Java Version: 3.25.5
package com.google.showcase.v1beta1;

public final class RestErrorOuterClass {
  private RestErrorOuterClass() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_showcase_v1beta1_RestError_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_showcase_v1beta1_RestError_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_showcase_v1beta1_RestError_Status_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_showcase_v1beta1_RestError_Status_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n/schema/google/showcase/v1beta1/rest_er"
          + "ror.proto\022\027google.showcase.v1beta1\032\031goog"
          + "le/protobuf/any.proto\032\025google/rpc/code.p"
          + "roto\"\267\001\n\tRestError\0228\n\005error\030\001 \001(\0132).goog"
          + "le.showcase.v1beta1.RestError.Status\032p\n\006"
          + "Status\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022 \n"
          + "\006status\030\004 \001(\0162\020.google.rpc.Code\022%\n\007detai"
          + "ls\030\005 \003(\0132\024.google.protobuf.AnyBq\n\033com.go"
          + "ogle.showcase.v1beta1P\001Z4github.com/goog"
          + "leapis/gapic-showcase/server/genproto\352\002\031"
          + "Google::Showcase::V1beta1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.protobuf.AnyProto.getDescriptor(),
              com.google.rpc.CodeProto.getDescriptor(),
            });
    internal_static_google_showcase_v1beta1_RestError_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_showcase_v1beta1_RestError_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_showcase_v1beta1_RestError_descriptor,
            new java.lang.String[] {
              "Error",
            });
    internal_static_google_showcase_v1beta1_RestError_Status_descriptor =
        internal_static_google_showcase_v1beta1_RestError_descriptor.getNestedTypes().get(0);
    internal_static_google_showcase_v1beta1_RestError_Status_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_showcase_v1beta1_RestError_Status_descriptor,
            new java.lang.String[] {
              "Code", "Message", "Status", "Details",
            });
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.rpc.CodeProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
