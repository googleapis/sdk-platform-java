// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/client.proto

package com.google.api;

/**
 * <pre>
 * Settings for Java client libraries.
 * </pre>
 *
 * Protobuf type {@code google.api.JavaSettings}
 */
public final class JavaSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.api.JavaSettings)
    JavaSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use JavaSettings.newBuilder() to construct.
  private JavaSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private JavaSettings() {
    libraryPackage_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new JavaSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.api.ClientProto.internal_static_google_api_JavaSettings_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetServiceClassNames();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.api.ClientProto.internal_static_google_api_JavaSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.api.JavaSettings.class, com.google.api.JavaSettings.Builder.class);
  }

  public static final int LIBRARY_PACKAGE_FIELD_NUMBER = 1;
  private volatile java.lang.Object libraryPackage_;
  /**
   * <pre>
   * The package name to use in Java. Clobbers the java_package option
   * set in the protobuf. This should be used **only** by APIs
   * who have already set the language_settings.java.package_name" field
   * in gapic.yaml. API teams should use the protobuf java_package option
   * where possible.
   * Example of a YAML configuration::
   *  publishing:
   *    java_settings:
   *      library_package: com.google.cloud.pubsub.v1
   * </pre>
   *
   * <code>string library_package = 1;</code>
   * @return The libraryPackage.
   */
  @java.lang.Override
  public java.lang.String getLibraryPackage() {
    java.lang.Object ref = libraryPackage_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      libraryPackage_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The package name to use in Java. Clobbers the java_package option
   * set in the protobuf. This should be used **only** by APIs
   * who have already set the language_settings.java.package_name" field
   * in gapic.yaml. API teams should use the protobuf java_package option
   * where possible.
   * Example of a YAML configuration::
   *  publishing:
   *    java_settings:
   *      library_package: com.google.cloud.pubsub.v1
   * </pre>
   *
   * <code>string library_package = 1;</code>
   * @return The bytes for libraryPackage.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLibraryPackageBytes() {
    java.lang.Object ref = libraryPackage_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      libraryPackage_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICE_CLASS_NAMES_FIELD_NUMBER = 2;
  private static final class ServiceClassNamesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.api.ClientProto.internal_static_google_api_JavaSettings_ServiceClassNamesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> serviceClassNames_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetServiceClassNames() {
    if (serviceClassNames_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ServiceClassNamesDefaultEntryHolder.defaultEntry);
    }
    return serviceClassNames_;
  }

  public int getServiceClassNamesCount() {
    return internalGetServiceClassNames().getMap().size();
  }
  /**
   * <pre>
   * Configure the Java class name to use instead of the service's for its
   * corresponding generated GAPIC client. Keys are fully-qualified
   * service names as they appear in the protobuf (including the full
   * the language_settings.java.interface_names" field in gapic.yaml. API
   * teams should otherwise use the service name as it appears in the
   * protobuf.
   * Example of a YAML configuration::
   *  publishing:
   *    java_settings:
   *      service_class_names:
   *        - google.pubsub.v1.Publisher: TopicAdmin
   *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; service_class_names = 2;</code>
   */

  @java.lang.Override
  public boolean containsServiceClassNames(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetServiceClassNames().getMap().containsKey(key);
  }
  /**
   * Use {@link #getServiceClassNamesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getServiceClassNames() {
    return getServiceClassNamesMap();
  }
  /**
   * <pre>
   * Configure the Java class name to use instead of the service's for its
   * corresponding generated GAPIC client. Keys are fully-qualified
   * service names as they appear in the protobuf (including the full
   * the language_settings.java.interface_names" field in gapic.yaml. API
   * teams should otherwise use the service name as it appears in the
   * protobuf.
   * Example of a YAML configuration::
   *  publishing:
   *    java_settings:
   *      service_class_names:
   *        - google.pubsub.v1.Publisher: TopicAdmin
   *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; service_class_names = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getServiceClassNamesMap() {
    return internalGetServiceClassNames().getMap();
  }
  /**
   * <pre>
   * Configure the Java class name to use instead of the service's for its
   * corresponding generated GAPIC client. Keys are fully-qualified
   * service names as they appear in the protobuf (including the full
   * the language_settings.java.interface_names" field in gapic.yaml. API
   * teams should otherwise use the service name as it appears in the
   * protobuf.
   * Example of a YAML configuration::
   *  publishing:
   *    java_settings:
   *      service_class_names:
   *        - google.pubsub.v1.Publisher: TopicAdmin
   *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; service_class_names = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getServiceClassNamesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetServiceClassNames().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Configure the Java class name to use instead of the service's for its
   * corresponding generated GAPIC client. Keys are fully-qualified
   * service names as they appear in the protobuf (including the full
   * the language_settings.java.interface_names" field in gapic.yaml. API
   * teams should otherwise use the service name as it appears in the
   * protobuf.
   * Example of a YAML configuration::
   *  publishing:
   *    java_settings:
   *      service_class_names:
   *        - google.pubsub.v1.Publisher: TopicAdmin
   *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
   * </pre>
   *
   * <code>map&lt;string, string&gt; service_class_names = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getServiceClassNamesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetServiceClassNames().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int COMMON_FIELD_NUMBER = 3;
  private com.google.api.CommonLanguageSettings common_;
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 3;</code>
   * @return Whether the common field is set.
   */
  @java.lang.Override
  public boolean hasCommon() {
    return common_ != null;
  }
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 3;</code>
   * @return The common.
   */
  @java.lang.Override
  public com.google.api.CommonLanguageSettings getCommon() {
    return common_ == null ? com.google.api.CommonLanguageSettings.getDefaultInstance() : common_;
  }
  /**
   * <pre>
   * Some settings.
   * </pre>
   *
   * <code>.google.api.CommonLanguageSettings common = 3;</code>
   */
  @java.lang.Override
  public com.google.api.CommonLanguageSettingsOrBuilder getCommonOrBuilder() {
    return getCommon();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(libraryPackage_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, libraryPackage_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetServiceClassNames(),
        ServiceClassNamesDefaultEntryHolder.defaultEntry,
        2);
    if (common_ != null) {
      output.writeMessage(3, getCommon());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(libraryPackage_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, libraryPackage_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetServiceClassNames().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      serviceClassNames__ = ServiceClassNamesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, serviceClassNames__);
    }
    if (common_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCommon());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.api.JavaSettings)) {
      return super.equals(obj);
    }
    com.google.api.JavaSettings other = (com.google.api.JavaSettings) obj;

    if (!getLibraryPackage()
        .equals(other.getLibraryPackage())) return false;
    if (!internalGetServiceClassNames().equals(
        other.internalGetServiceClassNames())) return false;
    if (hasCommon() != other.hasCommon()) return false;
    if (hasCommon()) {
      if (!getCommon()
          .equals(other.getCommon())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LIBRARY_PACKAGE_FIELD_NUMBER;
    hash = (53 * hash) + getLibraryPackage().hashCode();
    if (!internalGetServiceClassNames().getMap().isEmpty()) {
      hash = (37 * hash) + SERVICE_CLASS_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetServiceClassNames().hashCode();
    }
    if (hasCommon()) {
      hash = (37 * hash) + COMMON_FIELD_NUMBER;
      hash = (53 * hash) + getCommon().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.api.JavaSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.api.JavaSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.api.JavaSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.api.JavaSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.api.JavaSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.api.JavaSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.api.JavaSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.api.JavaSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.api.JavaSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.api.JavaSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.api.JavaSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.api.JavaSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.api.JavaSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Settings for Java client libraries.
   * </pre>
   *
   * Protobuf type {@code google.api.JavaSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.JavaSettings)
      com.google.api.JavaSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.api.ClientProto.internal_static_google_api_JavaSettings_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetServiceClassNames();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableServiceClassNames();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.ClientProto.internal_static_google_api_JavaSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.JavaSettings.class, com.google.api.JavaSettings.Builder.class);
    }

    // Construct using com.google.api.JavaSettings.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      libraryPackage_ = "";

      internalGetMutableServiceClassNames().clear();
      if (commonBuilder_ == null) {
        common_ = null;
      } else {
        common_ = null;
        commonBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.api.ClientProto.internal_static_google_api_JavaSettings_descriptor;
    }

    @java.lang.Override
    public com.google.api.JavaSettings getDefaultInstanceForType() {
      return com.google.api.JavaSettings.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.api.JavaSettings build() {
      com.google.api.JavaSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.api.JavaSettings buildPartial() {
      com.google.api.JavaSettings result = new com.google.api.JavaSettings(this);
      int from_bitField0_ = bitField0_;
      result.libraryPackage_ = libraryPackage_;
      result.serviceClassNames_ = internalGetServiceClassNames();
      result.serviceClassNames_.makeImmutable();
      if (commonBuilder_ == null) {
        result.common_ = common_;
      } else {
        result.common_ = commonBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.api.JavaSettings) {
        return mergeFrom((com.google.api.JavaSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.api.JavaSettings other) {
      if (other == com.google.api.JavaSettings.getDefaultInstance()) return this;
      if (!other.getLibraryPackage().isEmpty()) {
        libraryPackage_ = other.libraryPackage_;
        onChanged();
      }
      internalGetMutableServiceClassNames().mergeFrom(
          other.internalGetServiceClassNames());
      if (other.hasCommon()) {
        mergeCommon(other.getCommon());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              libraryPackage_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              serviceClassNames__ = input.readMessage(
                  ServiceClassNamesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableServiceClassNames().getMutableMap().put(
                  serviceClassNames__.getKey(), serviceClassNames__.getValue());
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getCommonFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object libraryPackage_ = "";
    /**
     * <pre>
     * The package name to use in Java. Clobbers the java_package option
     * set in the protobuf. This should be used **only** by APIs
     * who have already set the language_settings.java.package_name" field
     * in gapic.yaml. API teams should use the protobuf java_package option
     * where possible.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      library_package: com.google.cloud.pubsub.v1
     * </pre>
     *
     * <code>string library_package = 1;</code>
     * @return The libraryPackage.
     */
    public java.lang.String getLibraryPackage() {
      java.lang.Object ref = libraryPackage_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        libraryPackage_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The package name to use in Java. Clobbers the java_package option
     * set in the protobuf. This should be used **only** by APIs
     * who have already set the language_settings.java.package_name" field
     * in gapic.yaml. API teams should use the protobuf java_package option
     * where possible.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      library_package: com.google.cloud.pubsub.v1
     * </pre>
     *
     * <code>string library_package = 1;</code>
     * @return The bytes for libraryPackage.
     */
    public com.google.protobuf.ByteString
        getLibraryPackageBytes() {
      java.lang.Object ref = libraryPackage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        libraryPackage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The package name to use in Java. Clobbers the java_package option
     * set in the protobuf. This should be used **only** by APIs
     * who have already set the language_settings.java.package_name" field
     * in gapic.yaml. API teams should use the protobuf java_package option
     * where possible.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      library_package: com.google.cloud.pubsub.v1
     * </pre>
     *
     * <code>string library_package = 1;</code>
     * @param value The libraryPackage to set.
     * @return This builder for chaining.
     */
    public Builder setLibraryPackage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      libraryPackage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The package name to use in Java. Clobbers the java_package option
     * set in the protobuf. This should be used **only** by APIs
     * who have already set the language_settings.java.package_name" field
     * in gapic.yaml. API teams should use the protobuf java_package option
     * where possible.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      library_package: com.google.cloud.pubsub.v1
     * </pre>
     *
     * <code>string library_package = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLibraryPackage() {
      
      libraryPackage_ = getDefaultInstance().getLibraryPackage();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The package name to use in Java. Clobbers the java_package option
     * set in the protobuf. This should be used **only** by APIs
     * who have already set the language_settings.java.package_name" field
     * in gapic.yaml. API teams should use the protobuf java_package option
     * where possible.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      library_package: com.google.cloud.pubsub.v1
     * </pre>
     *
     * <code>string library_package = 1;</code>
     * @param value The bytes for libraryPackage to set.
     * @return This builder for chaining.
     */
    public Builder setLibraryPackageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      libraryPackage_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> serviceClassNames_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetServiceClassNames() {
      if (serviceClassNames_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ServiceClassNamesDefaultEntryHolder.defaultEntry);
      }
      return serviceClassNames_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableServiceClassNames() {
      onChanged();;
      if (serviceClassNames_ == null) {
        serviceClassNames_ = com.google.protobuf.MapField.newMapField(
            ServiceClassNamesDefaultEntryHolder.defaultEntry);
      }
      if (!serviceClassNames_.isMutable()) {
        serviceClassNames_ = serviceClassNames_.copy();
      }
      return serviceClassNames_;
    }

    public int getServiceClassNamesCount() {
      return internalGetServiceClassNames().getMap().size();
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */

    @java.lang.Override
    public boolean containsServiceClassNames(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetServiceClassNames().getMap().containsKey(key);
    }
    /**
     * Use {@link #getServiceClassNamesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getServiceClassNames() {
      return getServiceClassNamesMap();
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getServiceClassNamesMap() {
      return internalGetServiceClassNames().getMap();
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getServiceClassNamesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetServiceClassNames().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getServiceClassNamesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetServiceClassNames().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearServiceClassNames() {
      internalGetMutableServiceClassNames().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */

    public Builder removeServiceClassNames(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableServiceClassNames().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableServiceClassNames() {
      return internalGetMutableServiceClassNames().getMutableMap();
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */
    public Builder putServiceClassNames(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableServiceClassNames().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Configure the Java class name to use instead of the service's for its
     * corresponding generated GAPIC client. Keys are fully-qualified
     * service names as they appear in the protobuf (including the full
     * the language_settings.java.interface_names" field in gapic.yaml. API
     * teams should otherwise use the service name as it appears in the
     * protobuf.
     * Example of a YAML configuration::
     *  publishing:
     *    java_settings:
     *      service_class_names:
     *        - google.pubsub.v1.Publisher: TopicAdmin
     *        - google.pubsub.v1.Subscriber: SubscriptionAdmin
     * </pre>
     *
     * <code>map&lt;string, string&gt; service_class_names = 2;</code>
     */

    public Builder putAllServiceClassNames(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableServiceClassNames().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.api.CommonLanguageSettings common_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.api.CommonLanguageSettings, com.google.api.CommonLanguageSettings.Builder, com.google.api.CommonLanguageSettingsOrBuilder> commonBuilder_;
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     * @return Whether the common field is set.
     */
    public boolean hasCommon() {
      return commonBuilder_ != null || common_ != null;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     * @return The common.
     */
    public com.google.api.CommonLanguageSettings getCommon() {
      if (commonBuilder_ == null) {
        return common_ == null ? com.google.api.CommonLanguageSettings.getDefaultInstance() : common_;
      } else {
        return commonBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    public Builder setCommon(com.google.api.CommonLanguageSettings value) {
      if (commonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        common_ = value;
        onChanged();
      } else {
        commonBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    public Builder setCommon(
        com.google.api.CommonLanguageSettings.Builder builderForValue) {
      if (commonBuilder_ == null) {
        common_ = builderForValue.build();
        onChanged();
      } else {
        commonBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    public Builder mergeCommon(com.google.api.CommonLanguageSettings value) {
      if (commonBuilder_ == null) {
        if (common_ != null) {
          common_ =
            com.google.api.CommonLanguageSettings.newBuilder(common_).mergeFrom(value).buildPartial();
        } else {
          common_ = value;
        }
        onChanged();
      } else {
        commonBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    public Builder clearCommon() {
      if (commonBuilder_ == null) {
        common_ = null;
        onChanged();
      } else {
        common_ = null;
        commonBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    public com.google.api.CommonLanguageSettings.Builder getCommonBuilder() {
      
      onChanged();
      return getCommonFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    public com.google.api.CommonLanguageSettingsOrBuilder getCommonOrBuilder() {
      if (commonBuilder_ != null) {
        return commonBuilder_.getMessageOrBuilder();
      } else {
        return common_ == null ?
            com.google.api.CommonLanguageSettings.getDefaultInstance() : common_;
      }
    }
    /**
     * <pre>
     * Some settings.
     * </pre>
     *
     * <code>.google.api.CommonLanguageSettings common = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.api.CommonLanguageSettings, com.google.api.CommonLanguageSettings.Builder, com.google.api.CommonLanguageSettingsOrBuilder> 
        getCommonFieldBuilder() {
      if (commonBuilder_ == null) {
        commonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.CommonLanguageSettings, com.google.api.CommonLanguageSettings.Builder, com.google.api.CommonLanguageSettingsOrBuilder>(
                getCommon(),
                getParentForChildren(),
                isClean());
        common_ = null;
      }
      return commonBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.api.JavaSettings)
  }

  // @@protoc_insertion_point(class_scope:google.api.JavaSettings)
  private static final com.google.api.JavaSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.api.JavaSettings();
  }

  public static com.google.api.JavaSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<JavaSettings>
      PARSER = new com.google.protobuf.AbstractParser<JavaSettings>() {
    @java.lang.Override
    public JavaSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<JavaSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<JavaSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.api.JavaSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

