// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/v1/options.proto

package com.google.iam.v1;

public final class OptionsProto {
  private OptionsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_iam_v1_GetPolicyOptions_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_iam_v1_GetPolicyOptions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033google/iam/v1/options.proto\022\rgoogle.ia" +
      "m.v1\"4\n\020GetPolicyOptions\022 \n\030requested_po" +
      "licy_version\030\001 \001(\005B\204\001\n\021com.google.iam.v1" +
      "B\014OptionsProtoP\001Z0google.golang.org/genp" +
      "roto/googleapis/iam/v1;iam\370\001\001\252\002\023Google.C" +
      "loud.Iam.V1\312\002\023Google\\Cloud\\Iam\\V1b\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_google_iam_v1_GetPolicyOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_iam_v1_GetPolicyOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_iam_v1_GetPolicyOptions_descriptor,
        new java.lang.String[] { "RequestedPolicyVersion", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
