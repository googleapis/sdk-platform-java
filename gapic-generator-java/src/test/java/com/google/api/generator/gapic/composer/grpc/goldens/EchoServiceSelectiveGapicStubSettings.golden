package com.google.selective.generate.v1beta1.stub;

import com.google.api.core.ApiFunction;
import com.google.api.core.BetaApi;
import com.google.api.core.InternalApi;
import com.google.api.core.ObsoleteApi;
import com.google.api.gax.core.GaxProperties;
import com.google.api.gax.core.GoogleCredentialsProvider;
import com.google.api.gax.core.InstantiatingExecutorProvider;
import com.google.api.gax.grpc.GaxGrpcProperties;
import com.google.api.gax.grpc.GrpcTransportChannel;
import com.google.api.gax.grpc.InstantiatingGrpcChannelProvider;
import com.google.api.gax.retrying.RetrySettings;
import com.google.api.gax.rpc.ApiClientHeaderProvider;
import com.google.api.gax.rpc.ClientContext;
import com.google.api.gax.rpc.StatusCode;
import com.google.api.gax.rpc.StreamingCallSettings;
import com.google.api.gax.rpc.StubSettings;
import com.google.api.gax.rpc.TransportChannelProvider;
import com.google.api.gax.rpc.UnaryCallSettings;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.Lists;
import com.google.selective.generate.v1beta1.EchoRequest;
import com.google.selective.generate.v1beta1.EchoResponse;
import java.io.IOException;
import java.util.List;
import javax.annotation.Generated;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/**
 * Settings class to configure an instance of {@link EchoServiceShouldGeneratePartialUsualStub}.
 *
 * <p>The default instance has everything set to sensible defaults:
 *
 * <ul>
 *   <li>The default service address (localhost) and default port (7469) are used.
 *   <li>Credentials are acquired automatically through Application Default Credentials.
 *   <li>Retries are configured for idempotent methods but not for non-idempotent methods.
 * </ul>
 *
 * <p>The builder of this class is recursive, so contained classes are themselves builders. When
 * build() is called, the tree of builders is called to create the complete settings object.
 *
 * <p>For example, to set the
 * [RetrySettings](https://cloud.google.com/java/docs/reference/gax/latest/com.google.api.gax.retrying.RetrySettings)
 * of echoShouldGenerateAsUsual:
 *
 * <pre>{@code
 * // This snippet has been automatically generated and should be regarded as a code template only.
 * // It will require modifications to work:
 * // - It may require correct/in-range values for request initialization.
 * // - It may require specifying regional endpoints when creating the service client as shown in
 * // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library
 * EchoServiceShouldGeneratePartialUsualStubSettings.Builder
 *     echoServiceShouldGeneratePartialUsualSettingsBuilder =
 *         EchoServiceShouldGeneratePartialUsualStubSettings.newBuilder();
 * echoServiceShouldGeneratePartialUsualSettingsBuilder
 *     .echoShouldGenerateAsUsualSettings()
 *     .setRetrySettings(
 *         echoServiceShouldGeneratePartialUsualSettingsBuilder
 *             .echoShouldGenerateAsUsualSettings()
 *             .getRetrySettings()
 *             .toBuilder()
 *             .setInitialRetryDelayDuration(Duration.ofSeconds(1))
 *             .setInitialRpcTimeoutDuration(Duration.ofSeconds(5))
 *             .setMaxAttempts(5)
 *             .setMaxRetryDelayDuration(Duration.ofSeconds(30))
 *             .setMaxRpcTimeoutDuration(Duration.ofSeconds(60))
 *             .setRetryDelayMultiplier(1.3)
 *             .setRpcTimeoutMultiplier(1.5)
 *             .setTotalTimeoutDuration(Duration.ofSeconds(300))
 *             .build());
 * EchoServiceShouldGeneratePartialUsualStubSettings
 *     echoServiceShouldGeneratePartialUsualSettings =
 *         echoServiceShouldGeneratePartialUsualSettingsBuilder.build();
 * }</pre>
 *
 * Please refer to the [Client Side Retry
 * Guide](https://github.com/googleapis/google-cloud-java/blob/main/docs/client_retries.md) for
 * additional support in setting retries.
 */
@BetaApi
@Generated("by gapic-generator-java")
public class EchoServiceShouldGeneratePartialUsualStubSettings
    extends StubSettings<EchoServiceShouldGeneratePartialUsualStubSettings> {
  /** The default scopes of the service. */
  private static final ImmutableList<String> DEFAULT_SERVICE_SCOPES =
      ImmutableList.<String>builder().build();

  private final UnaryCallSettings<EchoRequest, EchoResponse> echoShouldGenerateAsUsualSettings;
  private final StreamingCallSettings<EchoRequest, EchoResponse> chatShouldGenerateAsUsualSettings;
  private final StreamingCallSettings<EchoRequest, EchoResponse>
      chatAgainShouldGenerateAsUsualSettings;
  private final UnaryCallSettings<EchoRequest, EchoResponse> chatShouldGenerateAsInternalSettings;
  private final StreamingCallSettings<EchoRequest, EchoResponse>
      echoShouldGenerateAsInternalSettings;

  /** Returns the object with the settings used for calls to echoShouldGenerateAsUsual. */
  public UnaryCallSettings<EchoRequest, EchoResponse> echoShouldGenerateAsUsualSettings() {
    return echoShouldGenerateAsUsualSettings;
  }

  /** Returns the object with the settings used for calls to chatShouldGenerateAsUsual. */
  public StreamingCallSettings<EchoRequest, EchoResponse> chatShouldGenerateAsUsualSettings() {
    return chatShouldGenerateAsUsualSettings;
  }

  /** Returns the object with the settings used for calls to chatAgainShouldGenerateAsUsual. */
  public StreamingCallSettings<EchoRequest, EchoResponse> chatAgainShouldGenerateAsUsualSettings() {
    return chatAgainShouldGenerateAsUsualSettings;
  }

  /**
   * Returns the object with the settings used for calls to chatShouldGenerateAsInternal.
   *
   * <p><b>Warning: </b>This method is for internal use only. Please do not use it directly.
   */
  @InternalApi("This API is not intended for public consumption.")
  public UnaryCallSettings<EchoRequest, EchoResponse> chatShouldGenerateAsInternalSettings() {
    return chatShouldGenerateAsInternalSettings;
  }

  /**
   * Returns the object with the settings used for calls to echoShouldGenerateAsInternal.
   *
   * <p><b>Warning: </b>This method is for internal use only. Please do not use it directly.
   */
  @InternalApi("This API is not intended for public consumption.")
  public StreamingCallSettings<EchoRequest, EchoResponse> echoShouldGenerateAsInternalSettings() {
    return echoShouldGenerateAsInternalSettings;
  }

  public EchoServiceShouldGeneratePartialUsualStub createStub() throws IOException {
    if (getTransportChannelProvider()
        .getTransportName()
        .equals(GrpcTransportChannel.getGrpcTransportName())) {
      return GrpcEchoServiceShouldGeneratePartialUsualStub.create(this);
    }
    throw new UnsupportedOperationException(
        String.format(
            "Transport not supported: %s", getTransportChannelProvider().getTransportName()));
  }

  /** Returns a builder for the default ExecutorProvider for this service. */
  public static InstantiatingExecutorProvider.Builder defaultExecutorProviderBuilder() {
    return InstantiatingExecutorProvider.newBuilder();
  }

  /** Returns the default service endpoint. */
  @ObsoleteApi("Use getEndpoint() instead")
  public static String getDefaultEndpoint() {
    return "localhost:7469";
  }

  /** Returns the default mTLS service endpoint. */
  public static String getDefaultMtlsEndpoint() {
    return "localhost:7469";
  }

  /** Returns the default service scopes. */
  public static List<String> getDefaultServiceScopes() {
    return DEFAULT_SERVICE_SCOPES;
  }

  /** Returns a builder for the default credentials for this service. */
  public static GoogleCredentialsProvider.Builder defaultCredentialsProviderBuilder() {
    return GoogleCredentialsProvider.newBuilder()
        .setScopesToApply(DEFAULT_SERVICE_SCOPES)
        .setUseJwtAccessWithScope(true);
  }

  /** Returns a builder for the default ChannelProvider for this service. */
  public static InstantiatingGrpcChannelProvider.Builder defaultGrpcTransportProviderBuilder() {
    return InstantiatingGrpcChannelProvider.newBuilder()
        .setMaxInboundMessageSize(Integer.MAX_VALUE);
  }

  public static TransportChannelProvider defaultTransportChannelProvider() {
    return defaultGrpcTransportProviderBuilder().build();
  }

  public static ApiClientHeaderProvider.Builder defaultApiClientHeaderProviderBuilder() {
    return ApiClientHeaderProvider.newBuilder()
        .setGeneratedLibToken(
            "gapic",
            GaxProperties.getLibraryVersion(
                EchoServiceShouldGeneratePartialUsualStubSettings.class))
        .setTransportToken(
            GaxGrpcProperties.getGrpcTokenName(), GaxGrpcProperties.getGrpcVersion());
  }

  /** Returns a new builder for this class. */
  public static Builder newBuilder() {
    return Builder.createDefault();
  }

  /** Returns a new builder for this class. */
  public static Builder newBuilder(ClientContext clientContext) {
    return new Builder(clientContext);
  }

  /** Returns a builder containing all the values of this settings class. */
  public Builder toBuilder() {
    return new Builder(this);
  }

  protected EchoServiceShouldGeneratePartialUsualStubSettings(Builder settingsBuilder)
      throws IOException {
    super(settingsBuilder);

    echoShouldGenerateAsUsualSettings = settingsBuilder.echoShouldGenerateAsUsualSettings().build();
    chatShouldGenerateAsUsualSettings = settingsBuilder.chatShouldGenerateAsUsualSettings().build();
    chatAgainShouldGenerateAsUsualSettings =
        settingsBuilder.chatAgainShouldGenerateAsUsualSettings().build();
    chatShouldGenerateAsInternalSettings =
        settingsBuilder.chatShouldGenerateAsInternalSettings().build();
    echoShouldGenerateAsInternalSettings =
        settingsBuilder.echoShouldGenerateAsInternalSettings().build();
  }

  /** Builder for EchoServiceShouldGeneratePartialUsualStubSettings. */
  public static class Builder
      extends StubSettings.Builder<EchoServiceShouldGeneratePartialUsualStubSettings, Builder> {
    private final ImmutableList<UnaryCallSettings.Builder<?, ?>> unaryMethodSettingsBuilders;
    private final UnaryCallSettings.Builder<EchoRequest, EchoResponse>
        echoShouldGenerateAsUsualSettings;
    private final StreamingCallSettings.Builder<EchoRequest, EchoResponse>
        chatShouldGenerateAsUsualSettings;
    private final StreamingCallSettings.Builder<EchoRequest, EchoResponse>
        chatAgainShouldGenerateAsUsualSettings;
    private final UnaryCallSettings.Builder<EchoRequest, EchoResponse>
        chatShouldGenerateAsInternalSettings;
    private final StreamingCallSettings.Builder<EchoRequest, EchoResponse>
        echoShouldGenerateAsInternalSettings;
    private static final ImmutableMap<String, ImmutableSet<StatusCode.Code>>
        RETRYABLE_CODE_DEFINITIONS;

    static {
      ImmutableMap.Builder<String, ImmutableSet<StatusCode.Code>> definitions =
          ImmutableMap.builder();
      definitions.put("no_retry_codes", ImmutableSet.copyOf(Lists.<StatusCode.Code>newArrayList()));
      RETRYABLE_CODE_DEFINITIONS = definitions.build();
    }

    private static final ImmutableMap<String, RetrySettings> RETRY_PARAM_DEFINITIONS;

    static {
      ImmutableMap.Builder<String, RetrySettings> definitions = ImmutableMap.builder();
      RetrySettings settings = null;
      settings = RetrySettings.newBuilder().setRpcTimeoutMultiplier(1.0).build();
      definitions.put("no_retry_params", settings);
      RETRY_PARAM_DEFINITIONS = definitions.build();
    }

    protected Builder() {
      this(((ClientContext) null));
    }

    protected Builder(ClientContext clientContext) {
      super(clientContext);

      echoShouldGenerateAsUsualSettings = UnaryCallSettings.newUnaryCallSettingsBuilder();
      chatShouldGenerateAsUsualSettings = StreamingCallSettings.newBuilder();
      chatAgainShouldGenerateAsUsualSettings = StreamingCallSettings.newBuilder();
      chatShouldGenerateAsInternalSettings = UnaryCallSettings.newUnaryCallSettingsBuilder();
      echoShouldGenerateAsInternalSettings = StreamingCallSettings.newBuilder();

      unaryMethodSettingsBuilders =
          ImmutableList.<UnaryCallSettings.Builder<?, ?>>of(
              echoShouldGenerateAsUsualSettings, chatShouldGenerateAsInternalSettings);
      initDefaults(this);
    }

    protected Builder(EchoServiceShouldGeneratePartialUsualStubSettings settings) {
      super(settings);

      echoShouldGenerateAsUsualSettings = settings.echoShouldGenerateAsUsualSettings.toBuilder();
      chatShouldGenerateAsUsualSettings = settings.chatShouldGenerateAsUsualSettings.toBuilder();
      chatAgainShouldGenerateAsUsualSettings =
          settings.chatAgainShouldGenerateAsUsualSettings.toBuilder();
      chatShouldGenerateAsInternalSettings =
          settings.chatShouldGenerateAsInternalSettings.toBuilder();
      echoShouldGenerateAsInternalSettings =
          settings.echoShouldGenerateAsInternalSettings.toBuilder();

      unaryMethodSettingsBuilders =
          ImmutableList.<UnaryCallSettings.Builder<?, ?>>of(
              echoShouldGenerateAsUsualSettings, chatShouldGenerateAsInternalSettings);
    }

    private static Builder createDefault() {
      Builder builder = new Builder(((ClientContext) null));

      builder.setTransportChannelProvider(defaultTransportChannelProvider());
      builder.setCredentialsProvider(defaultCredentialsProviderBuilder().build());
      builder.setInternalHeaderProvider(defaultApiClientHeaderProviderBuilder().build());
      builder.setMtlsEndpoint(getDefaultMtlsEndpoint());
      builder.setSwitchToMtlsEndpointAllowed(true);

      return initDefaults(builder);
    }

    private static Builder initDefaults(Builder builder) {
      builder
          .echoShouldGenerateAsUsualSettings()
          .setRetryableCodes(RETRYABLE_CODE_DEFINITIONS.get("no_retry_codes"))
          .setRetrySettings(RETRY_PARAM_DEFINITIONS.get("no_retry_params"));

      builder
          .chatShouldGenerateAsInternalSettings()
          .setRetryableCodes(RETRYABLE_CODE_DEFINITIONS.get("no_retry_codes"))
          .setRetrySettings(RETRY_PARAM_DEFINITIONS.get("no_retry_params"));

      return builder;
    }

    /**
     * Applies the given settings updater function to all of the unary API methods in this service.
     *
     * <p>Note: This method does not support applying settings to streaming methods.
     */
    public Builder applyToAllUnaryMethods(
        ApiFunction<UnaryCallSettings.Builder<?, ?>, Void> settingsUpdater) {
      super.applyToAllUnaryMethods(unaryMethodSettingsBuilders, settingsUpdater);
      return this;
    }

    public ImmutableList<UnaryCallSettings.Builder<?, ?>> unaryMethodSettingsBuilders() {
      return unaryMethodSettingsBuilders;
    }

    /** Returns the builder for the settings used for calls to echoShouldGenerateAsUsual. */
    public UnaryCallSettings.Builder<EchoRequest, EchoResponse>
        echoShouldGenerateAsUsualSettings() {
      return echoShouldGenerateAsUsualSettings;
    }

    /** Returns the builder for the settings used for calls to chatShouldGenerateAsUsual. */
    public StreamingCallSettings.Builder<EchoRequest, EchoResponse>
        chatShouldGenerateAsUsualSettings() {
      return chatShouldGenerateAsUsualSettings;
    }

    /** Returns the builder for the settings used for calls to chatAgainShouldGenerateAsUsual. */
    public StreamingCallSettings.Builder<EchoRequest, EchoResponse>
        chatAgainShouldGenerateAsUsualSettings() {
      return chatAgainShouldGenerateAsUsualSettings;
    }

    /**
     * Returns the builder for the settings used for calls to chatShouldGenerateAsInternal.
     *
     * <p><b>Warning: </b>This method is for internal use only. Please do not use it directly.
     */
    @InternalApi("This API is not intended for public consumption.")
    public UnaryCallSettings.Builder<EchoRequest, EchoResponse>
        chatShouldGenerateAsInternalSettings() {
      return chatShouldGenerateAsInternalSettings;
    }

    /**
     * Returns the builder for the settings used for calls to echoShouldGenerateAsInternal.
     *
     * <p><b>Warning: </b>This method is for internal use only. Please do not use it directly.
     */
    @InternalApi("This API is not intended for public consumption.")
    public StreamingCallSettings.Builder<EchoRequest, EchoResponse>
        echoShouldGenerateAsInternalSettings() {
      return echoShouldGenerateAsInternalSettings;
    }

    @Override
    public EchoServiceShouldGeneratePartialUsualStubSettings build() throws IOException {
      return new EchoServiceShouldGeneratePartialUsualStubSettings(this);
    }
  }
}
